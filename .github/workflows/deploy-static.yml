name: Deploy Static Portfolio

permissions:
  contents: write

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install React dependencies
        working-directory: ./react-app
        run: yarn install

      - name: Build React app
        working-directory: ./react-app
        run: yarn build

      - name: Install Vue dependencies
        working-directory: ./vue-app
        run: yarn install

      - name: Build Vue app
        working-directory: ./vue-app
        run: yarn build

      - name: Install Angular dependencies
        working-directory: ./angular-app
        run: yarn install

      - name: Build Angular app
        working-directory: ./angular-app
        run: yarn build

      - name: Prepare deployment
        run: |
          mkdir -p deploy/static
          # Copy framework builds to root-level directories
          cp -r react-app/dist deploy/static/react
          cp -r vue-app/dist deploy/static/vue
          cp -r angular-app/dist deploy/static/angular
          # Create placeholder directories for Flask and Django
          mkdir -p deploy/static/flask deploy/static/django
          echo '<!DOCTYPE html><html><head><title>Flask App</title></head><body><h1>Flask App</h1><p>This would be a server-side Flask application.</p><a href="../">← Back to Launcher</a></body></html>' > deploy/static/flask/index.html
          echo '<!DOCTYPE html><html><head><title>Django App</title></head><body><h1>Django App</h1><p>This would be a server-side Django application.</p><a href="../">← Back to Launcher</a></body></html>' > deploy/static/django/index.html
          # Copy launcher files to root
          cp nginx/launcher/index.html deploy/static/
          cp -r shared deploy/static/
          # Create .nojekyll to prevent Jekyll processing
          touch deploy/static/.nojekyll
          # List the structure for debugging
          echo "Deployment structure:"
          find deploy/static -type f -name "*.html" | head -20

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        if: github.ref == 'refs/heads/main'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./deploy/static
          publish_branch: gh-pages
